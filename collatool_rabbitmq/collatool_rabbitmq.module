<?php
include_once 'inc/collatool_rabbitmq.functions.inc';

function collatool_rabbitmq_message_send($message, $rounting_key){
  $broker = message_broker_get();
  $message_body = json_encode($message);
  $broker->sendMessage($message_body, 'msg_exchange', array('routing_key' => $rounting_key));
}

/**
 * Implements hook_message_broker_consumers().
 */
function collatool_rabbitmq_message_broker_consumers($self_name) {
  $consumers = array();

  $consumers['msg_email_consumer'] = array(
    'queue' => 'msg_email_queue',
    'callback' => function ($message, \Closure $ack) {
        $message = json_decode($message->body);

        $message = collatool_rabbitmq_to_canonical("email", $message);
        collatool_message_handler_classify($message);

        if (function_exists('drush_print')) {
          drush_print('Received email with from: ' . $message->sender);
          drush_print('to: ' . $message->receiver);
          drush_print('on: ' . $message->date);
          drush_print('Message: ' . $message->body);
          drush_print("=============================================");
        }
        else
          drupal_set_message(t('Received email with data: @data', array('@data' => $message->data)));

        $ack();
      },
    'invalidMessageHandler' => function ($message) {
        if (function_exists('drush_print'))
          drush_print('Invalid message handler was executed.');
        else
          drupal_set_message(t('Invalid message handler was executed.'), 'warning');
      }
  );
  $consumers['msg_im_consumer'] = array(
    'queue' => 'msg_im_queue',
    'callback' => function ($message, \Closure $ack) {
        $message = json_decode($message->body);

        $message = collatool_rabbitmq_to_canonical("skype", $message);
        collatool_message_handler_classify($message);
        if (function_exists('drush_print')) {
          drush_print('Received IM with from: ' . $message->sender);
          drush_print('to: ' . $message->receiver);
          drush_print('on: ' . $message->date);
          drush_print('Message: ' . $message->body);
          drush_print("=============================================");
        }
        else
          drupal_set_message(t('Received IM with data: @data', array('@data' => $message->data)));

        $ack();
      },
    'invalidMessageHandler' => function ($message) {
        if (function_exists('drush_print'))
          drush_print('Invalid message handler was executed.');
        else
          drupal_set_message(t('Invalid message handler was executed.'), 'warning');
      }
  );


  return $consumers;
}