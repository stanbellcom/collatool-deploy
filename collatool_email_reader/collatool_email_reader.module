<?php
include_once('inc/collatool_email_reader.functions.inc');

function collatool_email_reader_menu() {
  $items = array();

  $items['email/read'] = array(
    'title' => 'Read the email',
    'page callback' => 'collatool_email_reader_cron',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

function collatool_email_reader_cron() {
  print_r('started<br/><br/>');
  print_r('<pre>');

  $users = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->execute()
    ->fetchAll();

  foreach ($users as $user) {
    $full_user = user_load($user->uid);
    $email = $full_user->field_user_email['und'][0]['value'];
    $host = $full_user->field_user_email_host['und'][0]['value'];
    $port = $full_user->field_user_email_port['und'][0]['value'];
    $encryption = $full_user->field_user_email_encryption['und'][0]['value'];
    $password = $full_user->field_user_email_password['und'][0]['value'];

    if (!empty($email) && !empty($host) && !empty($port) && !empty($password)) {
      //creates a hostname connection string such as: '{mail.bellcom.dk:143/imap}INBOX' or '{imap.gmail.com:993/imap/ssl}INBOX';
      $hostname = '{' . $host . ':' . $port . '/imap';
      $hostname .= (!empty($encryption)) ? '/' . $encryption : '';
      $hostname .= '}INBOX';

      try {
        //imap_timeout(IMAP_OPENTIMEOUT, 5);
        $inbox = imap_open($hostname, $email, $password); // or die('Cannot connect to Email: ' . imap_last_error());
        $last_sync = db_select('collatool_email', 'ce')
          ->fields('ce', array('last_sync'))
          ->condition('uid', $user->uid, '=')
          ->execute()
          ->fetchField();
        $last_sync_date = date('d-M-Y', $last_sync);

        $emails = imap_search($inbox, 'SINCE "' . $last_sync_date . '"');
        $saved_time = time();

        if ($emails) {
          rsort($emails);
          foreach ($emails as $email_number) {
            $message = collatool_email_reader_get_message_general_info($inbox, $email_number);

            if (strtotime($message['date']) < $last_sync)//skipping emails which were already read
              continue;

            $message['body'] = collatool_email_reader_get_message_body($inbox, $email_number);
            collatool_rabbitmq_message_send($message, 'email');
            //preg_match_all('/(^\w.+:\n)?(^>.*(\n|$))+/mi',$message['body'],$meta);
            //$message['meta'] = collatool_rabbitmq_multi_implode($meta);
            //$message['meta'] = preg_replace('/>*/','',$message['meta']);
            //$message['body'] = preg_replace('/(^\w.+:\n)?(^>.*(\n|$))+/mi', '', $message['body']);
            print_r($message);
          }
        }
        imap_close($inbox);

        $num_updated = db_update('collatool_email')
          ->fields(array('last_sync' => $saved_time))
          ->condition('uid', $user->uid, '=')
          ->execute();

        if (!$num_updated) { //first time, then create
          db_insert('collatool_email')
            ->fields(array(
              'uid' => $user->uid,
              'email' => $email,
              'last_sync' => $saved_time,
            ))
            ->execute();
        }

      } catch (Exception $e) {
        throw new Exception('Something really gone wrong', 0, $e);
      }
    }
  }

  print_r('<br/><br/ >done');
}